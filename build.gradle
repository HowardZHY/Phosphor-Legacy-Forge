buildscript {
    repositories {
        jcenter()

        maven { url = 'https://repo.spongepowered.org/repository/maven-public' }
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.cleanroommc.com' }
    }

    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT"
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

plugins {
    id "java"
    id "com.github.johnrengelman.shadow" version "2.0.4"
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'

group = "me.jellysquid.mods"

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    mappings = "stable_22"
    runDir = "run"
    makeObfSourceJar = false
        /*runs {
        client {

            jvmArg "-Dfml.coreMods.load=me.jellysquid.mods.phosphor.core.PhosphorFMLPlugin"
            jvmArg "-Dmixin.hotSwap=true"
            jvmArg "-Dmixin.checks.interfaces=true"

            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }

        server {

            jvmArg "-Dfml.coreMods.load=me.jellysquid.mods.phosphor.core.PhosphorFMLPlugin"
            jvmArg "-Dmixin.hotSwap=true"
            jvmArg "-Dmixin.checks.interfaces=true"

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }
    }*/
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io/' }
    maven { url 'https://repo.spongepowered.org/maven' }
    maven {
        url "https://www.cursemaven.com"
    }
    maven { url = 'https://maven.minecraftforge.net' }
    maven {
        url 'https://maven.cleanroommc.com'
    }
    flatDir {
        dirs "libs"
    }
    mavenLocal()
}

configurations {
    include
    implementation.extendsFrom(include)
    configurations.runtimeOnly.canBeResolved = true
    shade
    compile.extendsFrom shade
}

dependencies {
    compile 'zone.rong:mixinbooter:8.4'
    compile fileTree(dir: 'libs', include:'DynamicLights-1.8.8.jar')
    //annotationProcessor("org.spongepowered:mixin:0.8.5:processor")
    //compileOnly("org.spongepowered:spongeapi:7.4.0")
    /*("org.spongepowered:mixin:0.8.5") {
        exclude module: "asm-commons"
        exclude module: "asm-tree"
        exclude module: "launchwrapper"
        exclude module: "guava"
        exclude module: "log4j-core"
        exclude module: "gson"
        exclude module: "commons-io"
    }*/
    /*compileOnly fg.deobf("curse.maven:dynamiclights-227874:2563244")
    compileOnly fg.deobf("curse.maven:sel-341845:3024600")
    compileOnly fg.deobf("curse.maven:mixinbooter-419286:3687785")
    runtimeOnly fg.deobf("curse.maven:mixinbooter-419286:3687785")
    runtimeOnly "re:witchery:0.5.2.4"
    runtimeOnly "tt:tp:1.0.1.1"*/
    include "org.spongepowered:mixin:0.7.11-SNAPSHOT"
}

apply plugin: "idea"

idea {
    module {
        downloadJavadoc = false
        downloadSources = false
        inheritOutputDirs = true
    }
}

def coreModManifest = {
    attributes "FMLAT": "phosphor_at.cfg"
    attributes "FMLCorePlugin": "me.jellysquid.mods.phosphor.core.PhosphorFMLPlugin"
    attributes "FMLCorePluginContainsFMLMod": true
    attributes "ForceLoadAsMod": true
    attributes "tweakClass": "org.spongepowered.asm.launch.MixinTweaker"
    attributes "TweakOrder": 0
}

jar {
    classifier = 'universal'

    manifest coreModManifest

    from sourceSets.main.output

    rename '(.+_at.cfg)', 'META-INF/$1'

    enabled = false
}

mixin {
    disableRefMapWarning = true
    defaultObfuscationEnv searge
    add sourceSets.main, "mixins.phosphor.refmap.json"
    //disableAnnotationProcessorCheck()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'

    manifest coreModManifest

    from sourceSets.main.allSource
}

processResources {
/*    duplicatesStrategy(DuplicatesStrategy.INCLUDE)
    inputs.property "version", project.version
    inputs.property "mcversion", "1.8.9"

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': "1.8.9"
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }*/
}



shadowJar {
    archiveName = jar.archiveName
    configurations = [project.configurations.include]
    compileJava.options.encoding = "UTF-8"
    exclude "native-binaries/*"
    exclude "META-INF/versions/**"

    dependencies {
        include(dependency("org.spongepowered:mixin:0.7.11-SNAPSHOT"))
    }
}

reobf {
    shadowJar {}
}

jar.dependsOn("shadowJar")

build.dependsOn shadowJar